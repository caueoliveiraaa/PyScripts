++++++++++++++++++++++++++++++++++++++++ STRINGS ++++++++++++++++++++++++++++++++++++++++

Exercise 1:
Given a string, print it in reverse using negative indexes.

Exercise 2:
Write a program that takes a string as input and prints its
characters in reverse order.

Exercise 3:
Create a function that takes a string and returns a new string
with every second character.

Exercise 4:
Write a program that takes a string and prints the first and
last characters.

Exercise 5:
Given a string, print the characters at even indexes.

Exercise 6:
Write a program that checks whether a string is a palindrome.

Exercise 7:
Create a function that counts the occurrences of a specific
character in a string.

Exercise 8:
Write a program that replaces all occurrences of a specified
character with another character in a given string.

Exercise 9:
Given a string, print the characters at odd indexes.

Exercise 10:
Create a program that concatenates two strings and prints the result.

Exercise 11:
Write a program that checks if two strings are anagrams.

Exercise 12:
Create a program that generates a random password of a specified length.

Exercise 13:
Write a program that formats a list of strings into a single
comma-separated string.

Exercise 14:
Given a string, print the first and last three characters.

Exercise 15:
Create a program that checks whether a string contains only digits.

Exercise 16:
Write a program that capitalizes the first letter of each word in a string.

Exercise 17:
Given a string, print the characters in reverse order, skipping the
first and last characters.

Exercise 18:
Create a program that extracts all the numbers from a string.

Exercise 19:
Write a program that counts the occurrences of each word in a string.

Exercise 20:
Given a string, check if it is a valid email address format.

Exercise 21:
Create a program that truncates a string to a specified length
and adds an ellipsis if necessary.

Exercise 22:
Write a program that encrypts a string using the Caesar cipher.

Exercise 23:
Given a string, print all possible permutations of its characters.

Exercise 24:
Create a program that converts a string to camel case.

Exercise 25:
Write a program that finds the most common character in a string.

Exercise 26:
Given a string, remove all the vowels and print the resulting string.

Exercise 27:
Create a program that indents a multi-line string.

Exercise 28:
Write a program that removes duplicate characters from a string.

Exercise 29:
Given a string, find the longest consecutive substring of a
single character.

Exercise 30:
Create a program that checks if a string is a valid JSON object.